// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mc500ipc.proto

#include "mc500ipc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_mc500ipc_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mc500ipc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AddProgramLine;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mc500ipc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ClearProgram;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mc500ipc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdChangeTool;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mc500ipc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdSpindle;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mc500ipc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CommandResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mc500ipc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Coordinate;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mc500ipc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CycleExecuting;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mc500ipc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CycleStart;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mc500ipc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CycleStop;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mc500ipc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CycleStopped;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mc500ipc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FeedHoldPressed;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mc500ipc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FeedHoldReleased;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mc500ipc_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CmdMoveTo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mc500ipc_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PositionUpdate;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mc500ipc_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SetWorkCoordinates;
}  // namespace protobuf_mc500ipc_2eproto
namespace mc500ipc {
class CoordinateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Coordinate>
      _instance;
} _Coordinate_default_instance_;
class CmdSpindleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdSpindle>
      _instance;
} _CmdSpindle_default_instance_;
class CmdMoveToDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMoveTo>
      _instance;
} _CmdMoveTo_default_instance_;
class CmdChangeToolDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdChangeTool>
      _instance;
} _CmdChangeTool_default_instance_;
class CommandResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommandResponse>
      _instance;
} _CommandResponse_default_instance_;
class FeedHoldPressedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FeedHoldPressed>
      _instance;
} _FeedHoldPressed_default_instance_;
class FeedHoldReleasedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FeedHoldReleased>
      _instance;
} _FeedHoldReleased_default_instance_;
class CycleStartDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CycleStart>
      _instance;
} _CycleStart_default_instance_;
class CycleStopDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CycleStop>
      _instance;
} _CycleStop_default_instance_;
class CycleExecutingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CycleExecuting>
      _instance;
} _CycleExecuting_default_instance_;
class CycleStoppedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CycleStopped>
      _instance;
} _CycleStopped_default_instance_;
class ClearProgramDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClearProgram>
      _instance;
} _ClearProgram_default_instance_;
class AddProgramLineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddProgramLine>
      _instance;
} _AddProgramLine_default_instance_;
class SetWorkCoordinatesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetWorkCoordinates>
      _instance;
} _SetWorkCoordinates_default_instance_;
class PositionUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PositionUpdate>
      _instance;
} _PositionUpdate_default_instance_;
class MessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Message>
      _instance;
  const ::mc500ipc::CmdSpindle* spindlecommand_;
  const ::mc500ipc::CmdMoveTo* movetocommand_;
  const ::mc500ipc::CommandResponse* commandresponse_;
  const ::mc500ipc::CmdChangeTool* toolcommand_;
  const ::mc500ipc::FeedHoldPressed* feedholdpressed_;
  const ::mc500ipc::FeedHoldReleased* feedholdreleased_;
  const ::mc500ipc::CycleStart* cyclestart_;
  const ::mc500ipc::CycleStop* cyclestop_;
  const ::mc500ipc::CycleExecuting* cycleexecuting_;
  const ::mc500ipc::CycleStopped* cyclestopped_;
  const ::mc500ipc::ClearProgram* clearprogram_;
  const ::mc500ipc::AddProgramLine* addprogramline_;
  const ::mc500ipc::SetWorkCoordinates* setworkcoordinates_;
  const ::mc500ipc::PositionUpdate* positionupdate_;
} _Message_default_instance_;
}  // namespace mc500ipc
namespace protobuf_mc500ipc_2eproto {
static void InitDefaultsCoordinate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mc500ipc::_Coordinate_default_instance_;
    new (ptr) ::mc500ipc::Coordinate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mc500ipc::Coordinate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Coordinate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCoordinate}, {}};

static void InitDefaultsCmdSpindle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mc500ipc::_CmdSpindle_default_instance_;
    new (ptr) ::mc500ipc::CmdSpindle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mc500ipc::CmdSpindle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdSpindle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdSpindle}, {}};

static void InitDefaultsCmdMoveTo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mc500ipc::_CmdMoveTo_default_instance_;
    new (ptr) ::mc500ipc::CmdMoveTo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mc500ipc::CmdMoveTo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CmdMoveTo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCmdMoveTo}, {
      &protobuf_mc500ipc_2eproto::scc_info_Coordinate.base,}};

static void InitDefaultsCmdChangeTool() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mc500ipc::_CmdChangeTool_default_instance_;
    new (ptr) ::mc500ipc::CmdChangeTool();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mc500ipc::CmdChangeTool::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdChangeTool =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdChangeTool}, {}};

static void InitDefaultsCommandResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mc500ipc::_CommandResponse_default_instance_;
    new (ptr) ::mc500ipc::CommandResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mc500ipc::CommandResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CommandResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCommandResponse}, {}};

static void InitDefaultsFeedHoldPressed() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mc500ipc::_FeedHoldPressed_default_instance_;
    new (ptr) ::mc500ipc::FeedHoldPressed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mc500ipc::FeedHoldPressed::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FeedHoldPressed =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFeedHoldPressed}, {}};

static void InitDefaultsFeedHoldReleased() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mc500ipc::_FeedHoldReleased_default_instance_;
    new (ptr) ::mc500ipc::FeedHoldReleased();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mc500ipc::FeedHoldReleased::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FeedHoldReleased =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFeedHoldReleased}, {}};

static void InitDefaultsCycleStart() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mc500ipc::_CycleStart_default_instance_;
    new (ptr) ::mc500ipc::CycleStart();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mc500ipc::CycleStart::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CycleStart =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCycleStart}, {}};

static void InitDefaultsCycleStop() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mc500ipc::_CycleStop_default_instance_;
    new (ptr) ::mc500ipc::CycleStop();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mc500ipc::CycleStop::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CycleStop =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCycleStop}, {}};

static void InitDefaultsCycleExecuting() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mc500ipc::_CycleExecuting_default_instance_;
    new (ptr) ::mc500ipc::CycleExecuting();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mc500ipc::CycleExecuting::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CycleExecuting =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCycleExecuting}, {}};

static void InitDefaultsCycleStopped() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mc500ipc::_CycleStopped_default_instance_;
    new (ptr) ::mc500ipc::CycleStopped();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mc500ipc::CycleStopped::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CycleStopped =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCycleStopped}, {}};

static void InitDefaultsClearProgram() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mc500ipc::_ClearProgram_default_instance_;
    new (ptr) ::mc500ipc::ClearProgram();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mc500ipc::ClearProgram::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClearProgram =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClearProgram}, {}};

static void InitDefaultsAddProgramLine() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mc500ipc::_AddProgramLine_default_instance_;
    new (ptr) ::mc500ipc::AddProgramLine();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mc500ipc::AddProgramLine::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AddProgramLine =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAddProgramLine}, {}};

static void InitDefaultsSetWorkCoordinates() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mc500ipc::_SetWorkCoordinates_default_instance_;
    new (ptr) ::mc500ipc::SetWorkCoordinates();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mc500ipc::SetWorkCoordinates::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SetWorkCoordinates =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSetWorkCoordinates}, {
      &protobuf_mc500ipc_2eproto::scc_info_Coordinate.base,}};

static void InitDefaultsPositionUpdate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mc500ipc::_PositionUpdate_default_instance_;
    new (ptr) ::mc500ipc::PositionUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mc500ipc::PositionUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PositionUpdate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPositionUpdate}, {
      &protobuf_mc500ipc_2eproto::scc_info_Coordinate.base,}};

static void InitDefaultsMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mc500ipc::_Message_default_instance_;
    new (ptr) ::mc500ipc::Message();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mc500ipc::Message::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<14> scc_info_Message =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 14, InitDefaultsMessage}, {
      &protobuf_mc500ipc_2eproto::scc_info_CmdSpindle.base,
      &protobuf_mc500ipc_2eproto::scc_info_CmdMoveTo.base,
      &protobuf_mc500ipc_2eproto::scc_info_CommandResponse.base,
      &protobuf_mc500ipc_2eproto::scc_info_CmdChangeTool.base,
      &protobuf_mc500ipc_2eproto::scc_info_FeedHoldPressed.base,
      &protobuf_mc500ipc_2eproto::scc_info_FeedHoldReleased.base,
      &protobuf_mc500ipc_2eproto::scc_info_CycleStart.base,
      &protobuf_mc500ipc_2eproto::scc_info_CycleStop.base,
      &protobuf_mc500ipc_2eproto::scc_info_CycleExecuting.base,
      &protobuf_mc500ipc_2eproto::scc_info_CycleStopped.base,
      &protobuf_mc500ipc_2eproto::scc_info_ClearProgram.base,
      &protobuf_mc500ipc_2eproto::scc_info_AddProgramLine.base,
      &protobuf_mc500ipc_2eproto::scc_info_SetWorkCoordinates.base,
      &protobuf_mc500ipc_2eproto::scc_info_PositionUpdate.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Coordinate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdSpindle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMoveTo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdChangeTool.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CommandResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FeedHoldPressed.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FeedHoldReleased.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CycleStart.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CycleStop.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CycleExecuting.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CycleStopped.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClearProgram.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddProgramLine.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetWorkCoordinates.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PositionUpdate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Message.base);
}

::google::protobuf::Metadata file_level_metadata[16];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::Coordinate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::Coordinate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::Coordinate, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::Coordinate, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::Coordinate, z_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::CmdSpindle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::CmdSpindle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::CmdSpindle, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::CmdSpindle, rpm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::CmdSpindle, id_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::CmdMoveTo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::CmdMoveTo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::CmdMoveTo, worktarget_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::CmdMoveTo, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::CmdMoveTo, id_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::CmdChangeTool, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::CmdChangeTool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::CmdChangeTool, newtool_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::CmdChangeTool, id_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::CommandResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::CommandResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::CommandResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::CommandResponse, finished_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::CommandResponse, diagmsg_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::FeedHoldPressed, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::FeedHoldPressed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::FeedHoldReleased, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::FeedHoldReleased, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::CycleStart, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::CycleStart, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::CycleStop, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::CycleStop, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::CycleExecuting, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::CycleExecuting, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::CycleExecuting, currentprogramstep_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::CycleStopped, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::CycleStopped, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::CycleStopped, nextprogramstep_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::ClearProgram, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::ClearProgram, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::AddProgramLine, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::AddProgramLine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::AddProgramLine, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::AddProgramLine, step_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::SetWorkCoordinates, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::SetWorkCoordinates, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::SetWorkCoordinates, currentworkcoordinate_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::PositionUpdate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::PositionUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::PositionUpdate, currentworkcoordinate_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::Message, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::Message, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::Message, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::mc500ipc::MessageDefaultTypeInternal, spindlecommand_),
  offsetof(::mc500ipc::MessageDefaultTypeInternal, movetocommand_),
  offsetof(::mc500ipc::MessageDefaultTypeInternal, commandresponse_),
  offsetof(::mc500ipc::MessageDefaultTypeInternal, toolcommand_),
  offsetof(::mc500ipc::MessageDefaultTypeInternal, feedholdpressed_),
  offsetof(::mc500ipc::MessageDefaultTypeInternal, feedholdreleased_),
  offsetof(::mc500ipc::MessageDefaultTypeInternal, cyclestart_),
  offsetof(::mc500ipc::MessageDefaultTypeInternal, cyclestop_),
  offsetof(::mc500ipc::MessageDefaultTypeInternal, cycleexecuting_),
  offsetof(::mc500ipc::MessageDefaultTypeInternal, cyclestopped_),
  offsetof(::mc500ipc::MessageDefaultTypeInternal, clearprogram_),
  offsetof(::mc500ipc::MessageDefaultTypeInternal, addprogramline_),
  offsetof(::mc500ipc::MessageDefaultTypeInternal, setworkcoordinates_),
  offsetof(::mc500ipc::MessageDefaultTypeInternal, positionupdate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mc500ipc::Message, msg_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::mc500ipc::Coordinate)},
  { 11, 19, sizeof(::mc500ipc::CmdSpindle)},
  { 22, 30, sizeof(::mc500ipc::CmdMoveTo)},
  { 33, 40, sizeof(::mc500ipc::CmdChangeTool)},
  { 42, 50, sizeof(::mc500ipc::CommandResponse)},
  { 53, 58, sizeof(::mc500ipc::FeedHoldPressed)},
  { 58, 63, sizeof(::mc500ipc::FeedHoldReleased)},
  { 63, 68, sizeof(::mc500ipc::CycleStart)},
  { 68, 73, sizeof(::mc500ipc::CycleStop)},
  { 73, 79, sizeof(::mc500ipc::CycleExecuting)},
  { 80, 86, sizeof(::mc500ipc::CycleStopped)},
  { 87, 92, sizeof(::mc500ipc::ClearProgram)},
  { 92, 99, sizeof(::mc500ipc::AddProgramLine)},
  { 101, 107, sizeof(::mc500ipc::SetWorkCoordinates)},
  { 108, 114, sizeof(::mc500ipc::PositionUpdate)},
  { 115, 135, sizeof(::mc500ipc::Message)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::mc500ipc::_Coordinate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mc500ipc::_CmdSpindle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mc500ipc::_CmdMoveTo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mc500ipc::_CmdChangeTool_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mc500ipc::_CommandResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mc500ipc::_FeedHoldPressed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mc500ipc::_FeedHoldReleased_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mc500ipc::_CycleStart_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mc500ipc::_CycleStop_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mc500ipc::_CycleExecuting_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mc500ipc::_CycleStopped_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mc500ipc::_ClearProgram_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mc500ipc::_AddProgramLine_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mc500ipc::_SetWorkCoordinates_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mc500ipc::_PositionUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mc500ipc::_Message_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "mc500ipc.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016mc500ipc.proto\022\010mc500ipc\"-\n\nCoordinate"
      "\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\022\t\n\001z\030\003 \001(\005\"~\n\nCmd"
      "Spindle\022)\n\003cmd\030\001 \002(\0162\034.mc500ipc.CmdSpind"
      "le.Command\022\013\n\003rpm\030\002 \002(\r\022\n\n\002id\030\003 \002(\t\",\n\007C"
      "ommand\022\010\n\004STOP\020\000\022\n\n\006RUN_CW\020\001\022\013\n\007RUN_CCW\020"
      "\002\"P\n\tCmdMoveTo\022(\n\nworkTarget\030\001 \002(\0132\024.mc5"
      "00ipc.Coordinate\022\r\n\005speed\030\002 \002(\r\022\n\n\002id\030\003 "
      "\002(\t\",\n\rCmdChangeTool\022\017\n\007newTool\030\001 \002(\r\022\n\n"
      "\002id\030\002 \002(\t\"@\n\017CommandResponse\022\n\n\002id\030\001 \002(\t"
      "\022\020\n\010finished\030\002 \002(\010\022\017\n\007diagMsg\030\003 \001(\t\"\021\n\017F"
      "eedHoldPressed\"\022\n\020FeedHoldReleased\"\014\n\nCy"
      "cleStart\"\013\n\tCycleStop\",\n\016CycleExecuting\022"
      "\032\n\022currentProgramStep\030\001 \002(\r\"\'\n\014CycleStop"
      "ped\022\027\n\017nextProgramStep\030\001 \002(\r\"\016\n\014ClearPro"
      "gram\",\n\016AddProgramLine\022\014\n\004code\030\001 \002(\t\022\014\n\004"
      "step\030\002 \002(\r\"I\n\022SetWorkCoordinates\0223\n\025curr"
      "entWorkCoordinate\030\001 \002(\0132\024.mc500ipc.Coord"
      "inate\"E\n\016PositionUpdate\0223\n\025currentWorkCo"
      "ordinate\030\001 \002(\0132\024.mc500ipc.Coordinate\"\320\005\n"
      "\007Message\022.\n\016spindleCommand\030\001 \001(\0132\024.mc500"
      "ipc.CmdSpindleH\000\022,\n\rmoveToCommand\030\002 \001(\0132"
      "\023.mc500ipc.CmdMoveToH\000\0224\n\017commandrespons"
      "e\030\003 \001(\0132\031.mc500ipc.CommandResponseH\000\022.\n\013"
      "toolcommand\030\004 \001(\0132\027.mc500ipc.CmdChangeTo"
      "olH\000\0224\n\017feedHoldPressed\030\005 \001(\0132\031.mc500ipc"
      ".FeedHoldPressedH\000\0226\n\020feedHoldReleased\030\006"
      " \001(\0132\032.mc500ipc.FeedHoldReleasedH\000\022*\n\ncy"
      "cleStart\030\007 \001(\0132\024.mc500ipc.CycleStartH\000\022("
      "\n\tcycleStop\030\010 \001(\0132\023.mc500ipc.CycleStopH\000"
      "\0222\n\016cycleExecuting\030\t \001(\0132\030.mc500ipc.Cycl"
      "eExecutingH\000\022.\n\014cycleStopped\030\n \001(\0132\026.mc5"
      "00ipc.CycleStoppedH\000\022.\n\014clearProgram\030\013 \001"
      "(\0132\026.mc500ipc.ClearProgramH\000\0222\n\016addProgr"
      "amLine\030\014 \001(\0132\030.mc500ipc.AddProgramLineH\000"
      "\022:\n\022setWorkCoordinates\030\r \001(\0132\034.mc500ipc."
      "SetWorkCoordinatesH\000\0222\n\016positionUpdate\030\016"
      " \001(\0132\030.mc500ipc.PositionUpdateH\000B\005\n\003msg"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1479);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mc500ipc.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_mc500ipc_2eproto
namespace mc500ipc {
const ::google::protobuf::EnumDescriptor* CmdSpindle_Command_descriptor() {
  protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mc500ipc_2eproto::file_level_enum_descriptors[0];
}
bool CmdSpindle_Command_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CmdSpindle_Command CmdSpindle::STOP;
const CmdSpindle_Command CmdSpindle::RUN_CW;
const CmdSpindle_Command CmdSpindle::RUN_CCW;
const CmdSpindle_Command CmdSpindle::Command_MIN;
const CmdSpindle_Command CmdSpindle::Command_MAX;
const int CmdSpindle::Command_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Coordinate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Coordinate::kXFieldNumber;
const int Coordinate::kYFieldNumber;
const int Coordinate::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Coordinate::Coordinate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mc500ipc_2eproto::scc_info_Coordinate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mc500ipc.Coordinate)
}
Coordinate::Coordinate(const Coordinate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:mc500ipc.Coordinate)
}

void Coordinate::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

Coordinate::~Coordinate() {
  // @@protoc_insertion_point(destructor:mc500ipc.Coordinate)
  SharedDtor();
}

void Coordinate::SharedDtor() {
}

void Coordinate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Coordinate::descriptor() {
  ::protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Coordinate& Coordinate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mc500ipc_2eproto::scc_info_Coordinate.base);
  return *internal_default_instance();
}


void Coordinate::Clear() {
// @@protoc_insertion_point(message_clear_start:mc500ipc.Coordinate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&z_) -
        reinterpret_cast<char*>(&x_)) + sizeof(z_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Coordinate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mc500ipc.Coordinate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mc500ipc.Coordinate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mc500ipc.Coordinate)
  return false;
#undef DO_
}

void Coordinate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mc500ipc.Coordinate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // optional int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  // optional int32 z = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mc500ipc.Coordinate)
}

::google::protobuf::uint8* Coordinate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mc500ipc.Coordinate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // optional int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  // optional int32 z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mc500ipc.Coordinate)
  return target;
}

size_t Coordinate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mc500ipc.Coordinate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 x = 1;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // optional int32 y = 2;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

    // optional int32 z = 3;
    if (has_z()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->z());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Coordinate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mc500ipc.Coordinate)
  GOOGLE_DCHECK_NE(&from, this);
  const Coordinate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Coordinate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mc500ipc.Coordinate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mc500ipc.Coordinate)
    MergeFrom(*source);
  }
}

void Coordinate::MergeFrom(const Coordinate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mc500ipc.Coordinate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      z_ = from.z_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Coordinate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mc500ipc.Coordinate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Coordinate::CopyFrom(const Coordinate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mc500ipc.Coordinate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Coordinate::IsInitialized() const {
  return true;
}

void Coordinate::Swap(Coordinate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Coordinate::InternalSwap(Coordinate* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Coordinate::GetMetadata() const {
  protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdSpindle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdSpindle::kCmdFieldNumber;
const int CmdSpindle::kRpmFieldNumber;
const int CmdSpindle::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdSpindle::CmdSpindle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mc500ipc_2eproto::scc_info_CmdSpindle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mc500ipc.CmdSpindle)
}
CmdSpindle::CmdSpindle(const CmdSpindle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  ::memcpy(&cmd_, &from.cmd_,
    static_cast<size_t>(reinterpret_cast<char*>(&rpm_) -
    reinterpret_cast<char*>(&cmd_)) + sizeof(rpm_));
  // @@protoc_insertion_point(copy_constructor:mc500ipc.CmdSpindle)
}

void CmdSpindle::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cmd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rpm_) -
      reinterpret_cast<char*>(&cmd_)) + sizeof(rpm_));
}

CmdSpindle::~CmdSpindle() {
  // @@protoc_insertion_point(destructor:mc500ipc.CmdSpindle)
  SharedDtor();
}

void CmdSpindle::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CmdSpindle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdSpindle::descriptor() {
  ::protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdSpindle& CmdSpindle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mc500ipc_2eproto::scc_info_CmdSpindle.base);
  return *internal_default_instance();
}


void CmdSpindle::Clear() {
// @@protoc_insertion_point(message_clear_start:mc500ipc.CmdSpindle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    id_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&cmd_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rpm_) -
        reinterpret_cast<char*>(&cmd_)) + sizeof(rpm_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CmdSpindle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mc500ipc.CmdSpindle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .mc500ipc.CmdSpindle.Command cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::mc500ipc::CmdSpindle_Command_IsValid(value)) {
            set_cmd(static_cast< ::mc500ipc::CmdSpindle_Command >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 rpm = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_rpm();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rpm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mc500ipc.CmdSpindle.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mc500ipc.CmdSpindle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mc500ipc.CmdSpindle)
  return false;
#undef DO_
}

void CmdSpindle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mc500ipc.CmdSpindle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .mc500ipc.CmdSpindle.Command cmd = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // required uint32 rpm = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rpm(), output);
  }

  // required string id = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mc500ipc.CmdSpindle.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mc500ipc.CmdSpindle)
}

::google::protobuf::uint8* CmdSpindle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mc500ipc.CmdSpindle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .mc500ipc.CmdSpindle.Command cmd = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // required uint32 rpm = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rpm(), target);
  }

  // required string id = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mc500ipc.CmdSpindle.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mc500ipc.CmdSpindle)
  return target;
}

size_t CmdSpindle::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:mc500ipc.CmdSpindle)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_cmd()) {
    // required .mc500ipc.CmdSpindle.Command cmd = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }

  if (has_rpm()) {
    // required uint32 rpm = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rpm());
  }

  return total_size;
}
size_t CmdSpindle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mc500ipc.CmdSpindle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required .mc500ipc.CmdSpindle.Command cmd = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());

    // required uint32 rpm = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rpm());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdSpindle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mc500ipc.CmdSpindle)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdSpindle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdSpindle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mc500ipc.CmdSpindle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mc500ipc.CmdSpindle)
    MergeFrom(*source);
  }
}

void CmdSpindle::MergeFrom(const CmdSpindle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mc500ipc.CmdSpindle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      cmd_ = from.cmd_;
    }
    if (cached_has_bits & 0x00000004u) {
      rpm_ = from.rpm_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CmdSpindle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mc500ipc.CmdSpindle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdSpindle::CopyFrom(const CmdSpindle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mc500ipc.CmdSpindle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdSpindle::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void CmdSpindle::Swap(CmdSpindle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdSpindle::InternalSwap(CmdSpindle* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cmd_, other->cmd_);
  swap(rpm_, other->rpm_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdSpindle::GetMetadata() const {
  protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMoveTo::InitAsDefaultInstance() {
  ::mc500ipc::_CmdMoveTo_default_instance_._instance.get_mutable()->worktarget_ = const_cast< ::mc500ipc::Coordinate*>(
      ::mc500ipc::Coordinate::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMoveTo::kWorkTargetFieldNumber;
const int CmdMoveTo::kSpeedFieldNumber;
const int CmdMoveTo::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMoveTo::CmdMoveTo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mc500ipc_2eproto::scc_info_CmdMoveTo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mc500ipc.CmdMoveTo)
}
CmdMoveTo::CmdMoveTo(const CmdMoveTo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_worktarget()) {
    worktarget_ = new ::mc500ipc::Coordinate(*from.worktarget_);
  } else {
    worktarget_ = NULL;
  }
  speed_ = from.speed_;
  // @@protoc_insertion_point(copy_constructor:mc500ipc.CmdMoveTo)
}

void CmdMoveTo::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&worktarget_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_) -
      reinterpret_cast<char*>(&worktarget_)) + sizeof(speed_));
}

CmdMoveTo::~CmdMoveTo() {
  // @@protoc_insertion_point(destructor:mc500ipc.CmdMoveTo)
  SharedDtor();
}

void CmdMoveTo::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete worktarget_;
}

void CmdMoveTo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMoveTo::descriptor() {
  ::protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMoveTo& CmdMoveTo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mc500ipc_2eproto::scc_info_CmdMoveTo.base);
  return *internal_default_instance();
}


void CmdMoveTo::Clear() {
// @@protoc_insertion_point(message_clear_start:mc500ipc.CmdMoveTo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(worktarget_ != NULL);
      worktarget_->Clear();
    }
  }
  speed_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CmdMoveTo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mc500ipc.CmdMoveTo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .mc500ipc.Coordinate workTarget = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_worktarget()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 speed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_speed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mc500ipc.CmdMoveTo.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mc500ipc.CmdMoveTo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mc500ipc.CmdMoveTo)
  return false;
#undef DO_
}

void CmdMoveTo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mc500ipc.CmdMoveTo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .mc500ipc.Coordinate workTarget = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_worktarget(), output);
  }

  // required uint32 speed = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->speed(), output);
  }

  // required string id = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mc500ipc.CmdMoveTo.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mc500ipc.CmdMoveTo)
}

::google::protobuf::uint8* CmdMoveTo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mc500ipc.CmdMoveTo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .mc500ipc.Coordinate workTarget = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_worktarget(), deterministic, target);
  }

  // required uint32 speed = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->speed(), target);
  }

  // required string id = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mc500ipc.CmdMoveTo.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mc500ipc.CmdMoveTo)
  return target;
}

size_t CmdMoveTo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:mc500ipc.CmdMoveTo)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_worktarget()) {
    // required .mc500ipc.Coordinate workTarget = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *worktarget_);
  }

  if (has_speed()) {
    // required uint32 speed = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->speed());
  }

  return total_size;
}
size_t CmdMoveTo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mc500ipc.CmdMoveTo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required .mc500ipc.Coordinate workTarget = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *worktarget_);

    // required uint32 speed = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->speed());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMoveTo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mc500ipc.CmdMoveTo)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMoveTo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMoveTo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mc500ipc.CmdMoveTo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mc500ipc.CmdMoveTo)
    MergeFrom(*source);
  }
}

void CmdMoveTo::MergeFrom(const CmdMoveTo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mc500ipc.CmdMoveTo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_worktarget()->::mc500ipc::Coordinate::MergeFrom(from.worktarget());
    }
    if (cached_has_bits & 0x00000004u) {
      speed_ = from.speed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CmdMoveTo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mc500ipc.CmdMoveTo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMoveTo::CopyFrom(const CmdMoveTo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mc500ipc.CmdMoveTo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMoveTo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void CmdMoveTo::Swap(CmdMoveTo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMoveTo::InternalSwap(CmdMoveTo* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(worktarget_, other->worktarget_);
  swap(speed_, other->speed_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMoveTo::GetMetadata() const {
  protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdChangeTool::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdChangeTool::kNewToolFieldNumber;
const int CmdChangeTool::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdChangeTool::CmdChangeTool()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mc500ipc_2eproto::scc_info_CmdChangeTool.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mc500ipc.CmdChangeTool)
}
CmdChangeTool::CmdChangeTool(const CmdChangeTool& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  newtool_ = from.newtool_;
  // @@protoc_insertion_point(copy_constructor:mc500ipc.CmdChangeTool)
}

void CmdChangeTool::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newtool_ = 0u;
}

CmdChangeTool::~CmdChangeTool() {
  // @@protoc_insertion_point(destructor:mc500ipc.CmdChangeTool)
  SharedDtor();
}

void CmdChangeTool::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CmdChangeTool::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdChangeTool::descriptor() {
  ::protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdChangeTool& CmdChangeTool::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mc500ipc_2eproto::scc_info_CmdChangeTool.base);
  return *internal_default_instance();
}


void CmdChangeTool::Clear() {
// @@protoc_insertion_point(message_clear_start:mc500ipc.CmdChangeTool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    id_.ClearNonDefaultToEmptyNoArena();
  }
  newtool_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CmdChangeTool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mc500ipc.CmdChangeTool)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 newTool = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_newtool();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &newtool_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mc500ipc.CmdChangeTool.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mc500ipc.CmdChangeTool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mc500ipc.CmdChangeTool)
  return false;
#undef DO_
}

void CmdChangeTool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mc500ipc.CmdChangeTool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 newTool = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->newtool(), output);
  }

  // required string id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mc500ipc.CmdChangeTool.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mc500ipc.CmdChangeTool)
}

::google::protobuf::uint8* CmdChangeTool::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mc500ipc.CmdChangeTool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 newTool = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->newtool(), target);
  }

  // required string id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mc500ipc.CmdChangeTool.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mc500ipc.CmdChangeTool)
  return target;
}

size_t CmdChangeTool::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:mc500ipc.CmdChangeTool)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_newtool()) {
    // required uint32 newTool = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->newtool());
  }

  return total_size;
}
size_t CmdChangeTool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mc500ipc.CmdChangeTool)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required uint32 newTool = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->newtool());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdChangeTool::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mc500ipc.CmdChangeTool)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdChangeTool* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdChangeTool>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mc500ipc.CmdChangeTool)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mc500ipc.CmdChangeTool)
    MergeFrom(*source);
  }
}

void CmdChangeTool::MergeFrom(const CmdChangeTool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mc500ipc.CmdChangeTool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      newtool_ = from.newtool_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CmdChangeTool::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mc500ipc.CmdChangeTool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdChangeTool::CopyFrom(const CmdChangeTool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mc500ipc.CmdChangeTool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdChangeTool::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void CmdChangeTool::Swap(CmdChangeTool* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdChangeTool::InternalSwap(CmdChangeTool* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(newtool_, other->newtool_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdChangeTool::GetMetadata() const {
  protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CommandResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommandResponse::kIdFieldNumber;
const int CommandResponse::kFinishedFieldNumber;
const int CommandResponse::kDiagMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommandResponse::CommandResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mc500ipc_2eproto::scc_info_CommandResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mc500ipc.CommandResponse)
}
CommandResponse::CommandResponse(const CommandResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  diagmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_diagmsg()) {
    diagmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.diagmsg_);
  }
  finished_ = from.finished_;
  // @@protoc_insertion_point(copy_constructor:mc500ipc.CommandResponse)
}

void CommandResponse::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  diagmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  finished_ = false;
}

CommandResponse::~CommandResponse() {
  // @@protoc_insertion_point(destructor:mc500ipc.CommandResponse)
  SharedDtor();
}

void CommandResponse::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  diagmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CommandResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CommandResponse::descriptor() {
  ::protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CommandResponse& CommandResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mc500ipc_2eproto::scc_info_CommandResponse.base);
  return *internal_default_instance();
}


void CommandResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mc500ipc.CommandResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      diagmsg_.ClearNonDefaultToEmptyNoArena();
    }
  }
  finished_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CommandResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mc500ipc.CommandResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mc500ipc.CommandResponse.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool finished = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_finished();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &finished_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string diagMsg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_diagmsg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->diagmsg().data(), static_cast<int>(this->diagmsg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mc500ipc.CommandResponse.diagMsg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mc500ipc.CommandResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mc500ipc.CommandResponse)
  return false;
#undef DO_
}

void CommandResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mc500ipc.CommandResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mc500ipc.CommandResponse.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required bool finished = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->finished(), output);
  }

  // optional string diagMsg = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->diagmsg().data(), static_cast<int>(this->diagmsg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mc500ipc.CommandResponse.diagMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->diagmsg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mc500ipc.CommandResponse)
}

::google::protobuf::uint8* CommandResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mc500ipc.CommandResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mc500ipc.CommandResponse.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required bool finished = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->finished(), target);
  }

  // optional string diagMsg = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->diagmsg().data(), static_cast<int>(this->diagmsg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mc500ipc.CommandResponse.diagMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->diagmsg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mc500ipc.CommandResponse)
  return target;
}

size_t CommandResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:mc500ipc.CommandResponse)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_finished()) {
    // required bool finished = 2;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t CommandResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mc500ipc.CommandResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required bool finished = 2;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string diagMsg = 3;
  if (has_diagmsg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->diagmsg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommandResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mc500ipc.CommandResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CommandResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommandResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mc500ipc.CommandResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mc500ipc.CommandResponse)
    MergeFrom(*source);
  }
}

void CommandResponse::MergeFrom(const CommandResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mc500ipc.CommandResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_diagmsg();
      diagmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.diagmsg_);
    }
    if (cached_has_bits & 0x00000004u) {
      finished_ = from.finished_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CommandResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mc500ipc.CommandResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommandResponse::CopyFrom(const CommandResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mc500ipc.CommandResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommandResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  return true;
}

void CommandResponse::Swap(CommandResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommandResponse::InternalSwap(CommandResponse* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  diagmsg_.Swap(&other->diagmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(finished_, other->finished_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CommandResponse::GetMetadata() const {
  protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FeedHoldPressed::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FeedHoldPressed::FeedHoldPressed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mc500ipc_2eproto::scc_info_FeedHoldPressed.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mc500ipc.FeedHoldPressed)
}
FeedHoldPressed::FeedHoldPressed(const FeedHoldPressed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mc500ipc.FeedHoldPressed)
}

void FeedHoldPressed::SharedCtor() {
}

FeedHoldPressed::~FeedHoldPressed() {
  // @@protoc_insertion_point(destructor:mc500ipc.FeedHoldPressed)
  SharedDtor();
}

void FeedHoldPressed::SharedDtor() {
}

void FeedHoldPressed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FeedHoldPressed::descriptor() {
  ::protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FeedHoldPressed& FeedHoldPressed::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mc500ipc_2eproto::scc_info_FeedHoldPressed.base);
  return *internal_default_instance();
}


void FeedHoldPressed::Clear() {
// @@protoc_insertion_point(message_clear_start:mc500ipc.FeedHoldPressed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FeedHoldPressed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mc500ipc.FeedHoldPressed)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mc500ipc.FeedHoldPressed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mc500ipc.FeedHoldPressed)
  return false;
#undef DO_
}

void FeedHoldPressed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mc500ipc.FeedHoldPressed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mc500ipc.FeedHoldPressed)
}

::google::protobuf::uint8* FeedHoldPressed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mc500ipc.FeedHoldPressed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mc500ipc.FeedHoldPressed)
  return target;
}

size_t FeedHoldPressed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mc500ipc.FeedHoldPressed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FeedHoldPressed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mc500ipc.FeedHoldPressed)
  GOOGLE_DCHECK_NE(&from, this);
  const FeedHoldPressed* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FeedHoldPressed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mc500ipc.FeedHoldPressed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mc500ipc.FeedHoldPressed)
    MergeFrom(*source);
  }
}

void FeedHoldPressed::MergeFrom(const FeedHoldPressed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mc500ipc.FeedHoldPressed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void FeedHoldPressed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mc500ipc.FeedHoldPressed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FeedHoldPressed::CopyFrom(const FeedHoldPressed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mc500ipc.FeedHoldPressed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FeedHoldPressed::IsInitialized() const {
  return true;
}

void FeedHoldPressed::Swap(FeedHoldPressed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FeedHoldPressed::InternalSwap(FeedHoldPressed* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FeedHoldPressed::GetMetadata() const {
  protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FeedHoldReleased::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FeedHoldReleased::FeedHoldReleased()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mc500ipc_2eproto::scc_info_FeedHoldReleased.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mc500ipc.FeedHoldReleased)
}
FeedHoldReleased::FeedHoldReleased(const FeedHoldReleased& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mc500ipc.FeedHoldReleased)
}

void FeedHoldReleased::SharedCtor() {
}

FeedHoldReleased::~FeedHoldReleased() {
  // @@protoc_insertion_point(destructor:mc500ipc.FeedHoldReleased)
  SharedDtor();
}

void FeedHoldReleased::SharedDtor() {
}

void FeedHoldReleased::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FeedHoldReleased::descriptor() {
  ::protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FeedHoldReleased& FeedHoldReleased::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mc500ipc_2eproto::scc_info_FeedHoldReleased.base);
  return *internal_default_instance();
}


void FeedHoldReleased::Clear() {
// @@protoc_insertion_point(message_clear_start:mc500ipc.FeedHoldReleased)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FeedHoldReleased::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mc500ipc.FeedHoldReleased)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mc500ipc.FeedHoldReleased)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mc500ipc.FeedHoldReleased)
  return false;
#undef DO_
}

void FeedHoldReleased::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mc500ipc.FeedHoldReleased)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mc500ipc.FeedHoldReleased)
}

::google::protobuf::uint8* FeedHoldReleased::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mc500ipc.FeedHoldReleased)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mc500ipc.FeedHoldReleased)
  return target;
}

size_t FeedHoldReleased::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mc500ipc.FeedHoldReleased)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FeedHoldReleased::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mc500ipc.FeedHoldReleased)
  GOOGLE_DCHECK_NE(&from, this);
  const FeedHoldReleased* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FeedHoldReleased>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mc500ipc.FeedHoldReleased)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mc500ipc.FeedHoldReleased)
    MergeFrom(*source);
  }
}

void FeedHoldReleased::MergeFrom(const FeedHoldReleased& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mc500ipc.FeedHoldReleased)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void FeedHoldReleased::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mc500ipc.FeedHoldReleased)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FeedHoldReleased::CopyFrom(const FeedHoldReleased& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mc500ipc.FeedHoldReleased)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FeedHoldReleased::IsInitialized() const {
  return true;
}

void FeedHoldReleased::Swap(FeedHoldReleased* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FeedHoldReleased::InternalSwap(FeedHoldReleased* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FeedHoldReleased::GetMetadata() const {
  protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CycleStart::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CycleStart::CycleStart()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mc500ipc_2eproto::scc_info_CycleStart.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mc500ipc.CycleStart)
}
CycleStart::CycleStart(const CycleStart& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mc500ipc.CycleStart)
}

void CycleStart::SharedCtor() {
}

CycleStart::~CycleStart() {
  // @@protoc_insertion_point(destructor:mc500ipc.CycleStart)
  SharedDtor();
}

void CycleStart::SharedDtor() {
}

void CycleStart::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CycleStart::descriptor() {
  ::protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CycleStart& CycleStart::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mc500ipc_2eproto::scc_info_CycleStart.base);
  return *internal_default_instance();
}


void CycleStart::Clear() {
// @@protoc_insertion_point(message_clear_start:mc500ipc.CycleStart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CycleStart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mc500ipc.CycleStart)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mc500ipc.CycleStart)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mc500ipc.CycleStart)
  return false;
#undef DO_
}

void CycleStart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mc500ipc.CycleStart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mc500ipc.CycleStart)
}

::google::protobuf::uint8* CycleStart::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mc500ipc.CycleStart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mc500ipc.CycleStart)
  return target;
}

size_t CycleStart::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mc500ipc.CycleStart)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CycleStart::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mc500ipc.CycleStart)
  GOOGLE_DCHECK_NE(&from, this);
  const CycleStart* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CycleStart>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mc500ipc.CycleStart)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mc500ipc.CycleStart)
    MergeFrom(*source);
  }
}

void CycleStart::MergeFrom(const CycleStart& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mc500ipc.CycleStart)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CycleStart::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mc500ipc.CycleStart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CycleStart::CopyFrom(const CycleStart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mc500ipc.CycleStart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CycleStart::IsInitialized() const {
  return true;
}

void CycleStart::Swap(CycleStart* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CycleStart::InternalSwap(CycleStart* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CycleStart::GetMetadata() const {
  protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CycleStop::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CycleStop::CycleStop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mc500ipc_2eproto::scc_info_CycleStop.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mc500ipc.CycleStop)
}
CycleStop::CycleStop(const CycleStop& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mc500ipc.CycleStop)
}

void CycleStop::SharedCtor() {
}

CycleStop::~CycleStop() {
  // @@protoc_insertion_point(destructor:mc500ipc.CycleStop)
  SharedDtor();
}

void CycleStop::SharedDtor() {
}

void CycleStop::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CycleStop::descriptor() {
  ::protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CycleStop& CycleStop::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mc500ipc_2eproto::scc_info_CycleStop.base);
  return *internal_default_instance();
}


void CycleStop::Clear() {
// @@protoc_insertion_point(message_clear_start:mc500ipc.CycleStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CycleStop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mc500ipc.CycleStop)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mc500ipc.CycleStop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mc500ipc.CycleStop)
  return false;
#undef DO_
}

void CycleStop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mc500ipc.CycleStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mc500ipc.CycleStop)
}

::google::protobuf::uint8* CycleStop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mc500ipc.CycleStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mc500ipc.CycleStop)
  return target;
}

size_t CycleStop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mc500ipc.CycleStop)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CycleStop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mc500ipc.CycleStop)
  GOOGLE_DCHECK_NE(&from, this);
  const CycleStop* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CycleStop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mc500ipc.CycleStop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mc500ipc.CycleStop)
    MergeFrom(*source);
  }
}

void CycleStop::MergeFrom(const CycleStop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mc500ipc.CycleStop)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CycleStop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mc500ipc.CycleStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CycleStop::CopyFrom(const CycleStop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mc500ipc.CycleStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CycleStop::IsInitialized() const {
  return true;
}

void CycleStop::Swap(CycleStop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CycleStop::InternalSwap(CycleStop* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CycleStop::GetMetadata() const {
  protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CycleExecuting::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CycleExecuting::kCurrentProgramStepFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CycleExecuting::CycleExecuting()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mc500ipc_2eproto::scc_info_CycleExecuting.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mc500ipc.CycleExecuting)
}
CycleExecuting::CycleExecuting(const CycleExecuting& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  currentprogramstep_ = from.currentprogramstep_;
  // @@protoc_insertion_point(copy_constructor:mc500ipc.CycleExecuting)
}

void CycleExecuting::SharedCtor() {
  currentprogramstep_ = 0u;
}

CycleExecuting::~CycleExecuting() {
  // @@protoc_insertion_point(destructor:mc500ipc.CycleExecuting)
  SharedDtor();
}

void CycleExecuting::SharedDtor() {
}

void CycleExecuting::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CycleExecuting::descriptor() {
  ::protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CycleExecuting& CycleExecuting::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mc500ipc_2eproto::scc_info_CycleExecuting.base);
  return *internal_default_instance();
}


void CycleExecuting::Clear() {
// @@protoc_insertion_point(message_clear_start:mc500ipc.CycleExecuting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  currentprogramstep_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CycleExecuting::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mc500ipc.CycleExecuting)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 currentProgramStep = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_currentprogramstep();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &currentprogramstep_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mc500ipc.CycleExecuting)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mc500ipc.CycleExecuting)
  return false;
#undef DO_
}

void CycleExecuting::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mc500ipc.CycleExecuting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 currentProgramStep = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->currentprogramstep(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mc500ipc.CycleExecuting)
}

::google::protobuf::uint8* CycleExecuting::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mc500ipc.CycleExecuting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 currentProgramStep = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->currentprogramstep(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mc500ipc.CycleExecuting)
  return target;
}

size_t CycleExecuting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mc500ipc.CycleExecuting)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 currentProgramStep = 1;
  if (has_currentprogramstep()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->currentprogramstep());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CycleExecuting::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mc500ipc.CycleExecuting)
  GOOGLE_DCHECK_NE(&from, this);
  const CycleExecuting* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CycleExecuting>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mc500ipc.CycleExecuting)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mc500ipc.CycleExecuting)
    MergeFrom(*source);
  }
}

void CycleExecuting::MergeFrom(const CycleExecuting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mc500ipc.CycleExecuting)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_currentprogramstep()) {
    set_currentprogramstep(from.currentprogramstep());
  }
}

void CycleExecuting::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mc500ipc.CycleExecuting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CycleExecuting::CopyFrom(const CycleExecuting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mc500ipc.CycleExecuting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CycleExecuting::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CycleExecuting::Swap(CycleExecuting* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CycleExecuting::InternalSwap(CycleExecuting* other) {
  using std::swap;
  swap(currentprogramstep_, other->currentprogramstep_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CycleExecuting::GetMetadata() const {
  protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CycleStopped::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CycleStopped::kNextProgramStepFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CycleStopped::CycleStopped()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mc500ipc_2eproto::scc_info_CycleStopped.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mc500ipc.CycleStopped)
}
CycleStopped::CycleStopped(const CycleStopped& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nextprogramstep_ = from.nextprogramstep_;
  // @@protoc_insertion_point(copy_constructor:mc500ipc.CycleStopped)
}

void CycleStopped::SharedCtor() {
  nextprogramstep_ = 0u;
}

CycleStopped::~CycleStopped() {
  // @@protoc_insertion_point(destructor:mc500ipc.CycleStopped)
  SharedDtor();
}

void CycleStopped::SharedDtor() {
}

void CycleStopped::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CycleStopped::descriptor() {
  ::protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CycleStopped& CycleStopped::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mc500ipc_2eproto::scc_info_CycleStopped.base);
  return *internal_default_instance();
}


void CycleStopped::Clear() {
// @@protoc_insertion_point(message_clear_start:mc500ipc.CycleStopped)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nextprogramstep_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CycleStopped::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mc500ipc.CycleStopped)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 nextProgramStep = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_nextprogramstep();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nextprogramstep_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mc500ipc.CycleStopped)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mc500ipc.CycleStopped)
  return false;
#undef DO_
}

void CycleStopped::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mc500ipc.CycleStopped)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 nextProgramStep = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->nextprogramstep(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mc500ipc.CycleStopped)
}

::google::protobuf::uint8* CycleStopped::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mc500ipc.CycleStopped)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 nextProgramStep = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->nextprogramstep(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mc500ipc.CycleStopped)
  return target;
}

size_t CycleStopped::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mc500ipc.CycleStopped)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 nextProgramStep = 1;
  if (has_nextprogramstep()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nextprogramstep());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CycleStopped::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mc500ipc.CycleStopped)
  GOOGLE_DCHECK_NE(&from, this);
  const CycleStopped* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CycleStopped>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mc500ipc.CycleStopped)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mc500ipc.CycleStopped)
    MergeFrom(*source);
  }
}

void CycleStopped::MergeFrom(const CycleStopped& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mc500ipc.CycleStopped)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_nextprogramstep()) {
    set_nextprogramstep(from.nextprogramstep());
  }
}

void CycleStopped::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mc500ipc.CycleStopped)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CycleStopped::CopyFrom(const CycleStopped& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mc500ipc.CycleStopped)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CycleStopped::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CycleStopped::Swap(CycleStopped* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CycleStopped::InternalSwap(CycleStopped* other) {
  using std::swap;
  swap(nextprogramstep_, other->nextprogramstep_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CycleStopped::GetMetadata() const {
  protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClearProgram::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClearProgram::ClearProgram()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mc500ipc_2eproto::scc_info_ClearProgram.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mc500ipc.ClearProgram)
}
ClearProgram::ClearProgram(const ClearProgram& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mc500ipc.ClearProgram)
}

void ClearProgram::SharedCtor() {
}

ClearProgram::~ClearProgram() {
  // @@protoc_insertion_point(destructor:mc500ipc.ClearProgram)
  SharedDtor();
}

void ClearProgram::SharedDtor() {
}

void ClearProgram::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClearProgram::descriptor() {
  ::protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClearProgram& ClearProgram::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mc500ipc_2eproto::scc_info_ClearProgram.base);
  return *internal_default_instance();
}


void ClearProgram::Clear() {
// @@protoc_insertion_point(message_clear_start:mc500ipc.ClearProgram)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ClearProgram::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mc500ipc.ClearProgram)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mc500ipc.ClearProgram)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mc500ipc.ClearProgram)
  return false;
#undef DO_
}

void ClearProgram::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mc500ipc.ClearProgram)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mc500ipc.ClearProgram)
}

::google::protobuf::uint8* ClearProgram::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mc500ipc.ClearProgram)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mc500ipc.ClearProgram)
  return target;
}

size_t ClearProgram::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mc500ipc.ClearProgram)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClearProgram::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mc500ipc.ClearProgram)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearProgram* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClearProgram>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mc500ipc.ClearProgram)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mc500ipc.ClearProgram)
    MergeFrom(*source);
  }
}

void ClearProgram::MergeFrom(const ClearProgram& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mc500ipc.ClearProgram)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ClearProgram::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mc500ipc.ClearProgram)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearProgram::CopyFrom(const ClearProgram& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mc500ipc.ClearProgram)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearProgram::IsInitialized() const {
  return true;
}

void ClearProgram::Swap(ClearProgram* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClearProgram::InternalSwap(ClearProgram* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClearProgram::GetMetadata() const {
  protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddProgramLine::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddProgramLine::kCodeFieldNumber;
const int AddProgramLine::kStepFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddProgramLine::AddProgramLine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mc500ipc_2eproto::scc_info_AddProgramLine.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mc500ipc.AddProgramLine)
}
AddProgramLine::AddProgramLine(const AddProgramLine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_code()) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  step_ = from.step_;
  // @@protoc_insertion_point(copy_constructor:mc500ipc.AddProgramLine)
}

void AddProgramLine::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  step_ = 0u;
}

AddProgramLine::~AddProgramLine() {
  // @@protoc_insertion_point(destructor:mc500ipc.AddProgramLine)
  SharedDtor();
}

void AddProgramLine::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddProgramLine::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddProgramLine::descriptor() {
  ::protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddProgramLine& AddProgramLine::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mc500ipc_2eproto::scc_info_AddProgramLine.base);
  return *internal_default_instance();
}


void AddProgramLine::Clear() {
// @@protoc_insertion_point(message_clear_start:mc500ipc.AddProgramLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    code_.ClearNonDefaultToEmptyNoArena();
  }
  step_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AddProgramLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mc500ipc.AddProgramLine)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mc500ipc.AddProgramLine.code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 step = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_step();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &step_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mc500ipc.AddProgramLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mc500ipc.AddProgramLine)
  return false;
#undef DO_
}

void AddProgramLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mc500ipc.AddProgramLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mc500ipc.AddProgramLine.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->code(), output);
  }

  // required uint32 step = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->step(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mc500ipc.AddProgramLine)
}

::google::protobuf::uint8* AddProgramLine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mc500ipc.AddProgramLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mc500ipc.AddProgramLine.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->code(), target);
  }

  // required uint32 step = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->step(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mc500ipc.AddProgramLine)
  return target;
}

size_t AddProgramLine::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:mc500ipc.AddProgramLine)
  size_t total_size = 0;

  if (has_code()) {
    // required string code = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  if (has_step()) {
    // required uint32 step = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->step());
  }

  return total_size;
}
size_t AddProgramLine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mc500ipc.AddProgramLine)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string code = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());

    // required uint32 step = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->step());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddProgramLine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mc500ipc.AddProgramLine)
  GOOGLE_DCHECK_NE(&from, this);
  const AddProgramLine* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddProgramLine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mc500ipc.AddProgramLine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mc500ipc.AddProgramLine)
    MergeFrom(*source);
  }
}

void AddProgramLine::MergeFrom(const AddProgramLine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mc500ipc.AddProgramLine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_code();
      code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
    }
    if (cached_has_bits & 0x00000002u) {
      step_ = from.step_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AddProgramLine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mc500ipc.AddProgramLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddProgramLine::CopyFrom(const AddProgramLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mc500ipc.AddProgramLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddProgramLine::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void AddProgramLine::Swap(AddProgramLine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddProgramLine::InternalSwap(AddProgramLine* other) {
  using std::swap;
  code_.Swap(&other->code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(step_, other->step_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddProgramLine::GetMetadata() const {
  protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetWorkCoordinates::InitAsDefaultInstance() {
  ::mc500ipc::_SetWorkCoordinates_default_instance_._instance.get_mutable()->currentworkcoordinate_ = const_cast< ::mc500ipc::Coordinate*>(
      ::mc500ipc::Coordinate::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetWorkCoordinates::kCurrentWorkCoordinateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetWorkCoordinates::SetWorkCoordinates()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mc500ipc_2eproto::scc_info_SetWorkCoordinates.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mc500ipc.SetWorkCoordinates)
}
SetWorkCoordinates::SetWorkCoordinates(const SetWorkCoordinates& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_currentworkcoordinate()) {
    currentworkcoordinate_ = new ::mc500ipc::Coordinate(*from.currentworkcoordinate_);
  } else {
    currentworkcoordinate_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mc500ipc.SetWorkCoordinates)
}

void SetWorkCoordinates::SharedCtor() {
  currentworkcoordinate_ = NULL;
}

SetWorkCoordinates::~SetWorkCoordinates() {
  // @@protoc_insertion_point(destructor:mc500ipc.SetWorkCoordinates)
  SharedDtor();
}

void SetWorkCoordinates::SharedDtor() {
  if (this != internal_default_instance()) delete currentworkcoordinate_;
}

void SetWorkCoordinates::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetWorkCoordinates::descriptor() {
  ::protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetWorkCoordinates& SetWorkCoordinates::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mc500ipc_2eproto::scc_info_SetWorkCoordinates.base);
  return *internal_default_instance();
}


void SetWorkCoordinates::Clear() {
// @@protoc_insertion_point(message_clear_start:mc500ipc.SetWorkCoordinates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(currentworkcoordinate_ != NULL);
    currentworkcoordinate_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetWorkCoordinates::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mc500ipc.SetWorkCoordinates)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .mc500ipc.Coordinate currentWorkCoordinate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_currentworkcoordinate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mc500ipc.SetWorkCoordinates)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mc500ipc.SetWorkCoordinates)
  return false;
#undef DO_
}

void SetWorkCoordinates::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mc500ipc.SetWorkCoordinates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .mc500ipc.Coordinate currentWorkCoordinate = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_currentworkcoordinate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mc500ipc.SetWorkCoordinates)
}

::google::protobuf::uint8* SetWorkCoordinates::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mc500ipc.SetWorkCoordinates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .mc500ipc.Coordinate currentWorkCoordinate = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_currentworkcoordinate(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mc500ipc.SetWorkCoordinates)
  return target;
}

size_t SetWorkCoordinates::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mc500ipc.SetWorkCoordinates)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .mc500ipc.Coordinate currentWorkCoordinate = 1;
  if (has_currentworkcoordinate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *currentworkcoordinate_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetWorkCoordinates::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mc500ipc.SetWorkCoordinates)
  GOOGLE_DCHECK_NE(&from, this);
  const SetWorkCoordinates* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetWorkCoordinates>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mc500ipc.SetWorkCoordinates)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mc500ipc.SetWorkCoordinates)
    MergeFrom(*source);
  }
}

void SetWorkCoordinates::MergeFrom(const SetWorkCoordinates& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mc500ipc.SetWorkCoordinates)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_currentworkcoordinate()) {
    mutable_currentworkcoordinate()->::mc500ipc::Coordinate::MergeFrom(from.currentworkcoordinate());
  }
}

void SetWorkCoordinates::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mc500ipc.SetWorkCoordinates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetWorkCoordinates::CopyFrom(const SetWorkCoordinates& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mc500ipc.SetWorkCoordinates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetWorkCoordinates::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void SetWorkCoordinates::Swap(SetWorkCoordinates* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetWorkCoordinates::InternalSwap(SetWorkCoordinates* other) {
  using std::swap;
  swap(currentworkcoordinate_, other->currentworkcoordinate_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetWorkCoordinates::GetMetadata() const {
  protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PositionUpdate::InitAsDefaultInstance() {
  ::mc500ipc::_PositionUpdate_default_instance_._instance.get_mutable()->currentworkcoordinate_ = const_cast< ::mc500ipc::Coordinate*>(
      ::mc500ipc::Coordinate::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PositionUpdate::kCurrentWorkCoordinateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PositionUpdate::PositionUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mc500ipc_2eproto::scc_info_PositionUpdate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mc500ipc.PositionUpdate)
}
PositionUpdate::PositionUpdate(const PositionUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_currentworkcoordinate()) {
    currentworkcoordinate_ = new ::mc500ipc::Coordinate(*from.currentworkcoordinate_);
  } else {
    currentworkcoordinate_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mc500ipc.PositionUpdate)
}

void PositionUpdate::SharedCtor() {
  currentworkcoordinate_ = NULL;
}

PositionUpdate::~PositionUpdate() {
  // @@protoc_insertion_point(destructor:mc500ipc.PositionUpdate)
  SharedDtor();
}

void PositionUpdate::SharedDtor() {
  if (this != internal_default_instance()) delete currentworkcoordinate_;
}

void PositionUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PositionUpdate::descriptor() {
  ::protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PositionUpdate& PositionUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mc500ipc_2eproto::scc_info_PositionUpdate.base);
  return *internal_default_instance();
}


void PositionUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:mc500ipc.PositionUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(currentworkcoordinate_ != NULL);
    currentworkcoordinate_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PositionUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mc500ipc.PositionUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .mc500ipc.Coordinate currentWorkCoordinate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_currentworkcoordinate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mc500ipc.PositionUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mc500ipc.PositionUpdate)
  return false;
#undef DO_
}

void PositionUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mc500ipc.PositionUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .mc500ipc.Coordinate currentWorkCoordinate = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_currentworkcoordinate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mc500ipc.PositionUpdate)
}

::google::protobuf::uint8* PositionUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mc500ipc.PositionUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .mc500ipc.Coordinate currentWorkCoordinate = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_currentworkcoordinate(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mc500ipc.PositionUpdate)
  return target;
}

size_t PositionUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mc500ipc.PositionUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .mc500ipc.Coordinate currentWorkCoordinate = 1;
  if (has_currentworkcoordinate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *currentworkcoordinate_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PositionUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mc500ipc.PositionUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const PositionUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PositionUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mc500ipc.PositionUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mc500ipc.PositionUpdate)
    MergeFrom(*source);
  }
}

void PositionUpdate::MergeFrom(const PositionUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mc500ipc.PositionUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_currentworkcoordinate()) {
    mutable_currentworkcoordinate()->::mc500ipc::Coordinate::MergeFrom(from.currentworkcoordinate());
  }
}

void PositionUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mc500ipc.PositionUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PositionUpdate::CopyFrom(const PositionUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mc500ipc.PositionUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PositionUpdate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void PositionUpdate::Swap(PositionUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PositionUpdate::InternalSwap(PositionUpdate* other) {
  using std::swap;
  swap(currentworkcoordinate_, other->currentworkcoordinate_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PositionUpdate::GetMetadata() const {
  protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Message::InitAsDefaultInstance() {
  ::mc500ipc::_Message_default_instance_.spindlecommand_ = const_cast< ::mc500ipc::CmdSpindle*>(
      ::mc500ipc::CmdSpindle::internal_default_instance());
  ::mc500ipc::_Message_default_instance_.movetocommand_ = const_cast< ::mc500ipc::CmdMoveTo*>(
      ::mc500ipc::CmdMoveTo::internal_default_instance());
  ::mc500ipc::_Message_default_instance_.commandresponse_ = const_cast< ::mc500ipc::CommandResponse*>(
      ::mc500ipc::CommandResponse::internal_default_instance());
  ::mc500ipc::_Message_default_instance_.toolcommand_ = const_cast< ::mc500ipc::CmdChangeTool*>(
      ::mc500ipc::CmdChangeTool::internal_default_instance());
  ::mc500ipc::_Message_default_instance_.feedholdpressed_ = const_cast< ::mc500ipc::FeedHoldPressed*>(
      ::mc500ipc::FeedHoldPressed::internal_default_instance());
  ::mc500ipc::_Message_default_instance_.feedholdreleased_ = const_cast< ::mc500ipc::FeedHoldReleased*>(
      ::mc500ipc::FeedHoldReleased::internal_default_instance());
  ::mc500ipc::_Message_default_instance_.cyclestart_ = const_cast< ::mc500ipc::CycleStart*>(
      ::mc500ipc::CycleStart::internal_default_instance());
  ::mc500ipc::_Message_default_instance_.cyclestop_ = const_cast< ::mc500ipc::CycleStop*>(
      ::mc500ipc::CycleStop::internal_default_instance());
  ::mc500ipc::_Message_default_instance_.cycleexecuting_ = const_cast< ::mc500ipc::CycleExecuting*>(
      ::mc500ipc::CycleExecuting::internal_default_instance());
  ::mc500ipc::_Message_default_instance_.cyclestopped_ = const_cast< ::mc500ipc::CycleStopped*>(
      ::mc500ipc::CycleStopped::internal_default_instance());
  ::mc500ipc::_Message_default_instance_.clearprogram_ = const_cast< ::mc500ipc::ClearProgram*>(
      ::mc500ipc::ClearProgram::internal_default_instance());
  ::mc500ipc::_Message_default_instance_.addprogramline_ = const_cast< ::mc500ipc::AddProgramLine*>(
      ::mc500ipc::AddProgramLine::internal_default_instance());
  ::mc500ipc::_Message_default_instance_.setworkcoordinates_ = const_cast< ::mc500ipc::SetWorkCoordinates*>(
      ::mc500ipc::SetWorkCoordinates::internal_default_instance());
  ::mc500ipc::_Message_default_instance_.positionupdate_ = const_cast< ::mc500ipc::PositionUpdate*>(
      ::mc500ipc::PositionUpdate::internal_default_instance());
}
void Message::set_allocated_spindlecommand(::mc500ipc::CmdSpindle* spindlecommand) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (spindlecommand) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      spindlecommand = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, spindlecommand, submessage_arena);
    }
    set_has_spindlecommand();
    msg_.spindlecommand_ = spindlecommand;
  }
  // @@protoc_insertion_point(field_set_allocated:mc500ipc.Message.spindleCommand)
}
void Message::set_allocated_movetocommand(::mc500ipc::CmdMoveTo* movetocommand) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (movetocommand) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      movetocommand = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, movetocommand, submessage_arena);
    }
    set_has_movetocommand();
    msg_.movetocommand_ = movetocommand;
  }
  // @@protoc_insertion_point(field_set_allocated:mc500ipc.Message.moveToCommand)
}
void Message::set_allocated_commandresponse(::mc500ipc::CommandResponse* commandresponse) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (commandresponse) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      commandresponse = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, commandresponse, submessage_arena);
    }
    set_has_commandresponse();
    msg_.commandresponse_ = commandresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:mc500ipc.Message.commandresponse)
}
void Message::set_allocated_toolcommand(::mc500ipc::CmdChangeTool* toolcommand) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (toolcommand) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      toolcommand = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, toolcommand, submessage_arena);
    }
    set_has_toolcommand();
    msg_.toolcommand_ = toolcommand;
  }
  // @@protoc_insertion_point(field_set_allocated:mc500ipc.Message.toolcommand)
}
void Message::set_allocated_feedholdpressed(::mc500ipc::FeedHoldPressed* feedholdpressed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (feedholdpressed) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      feedholdpressed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, feedholdpressed, submessage_arena);
    }
    set_has_feedholdpressed();
    msg_.feedholdpressed_ = feedholdpressed;
  }
  // @@protoc_insertion_point(field_set_allocated:mc500ipc.Message.feedHoldPressed)
}
void Message::set_allocated_feedholdreleased(::mc500ipc::FeedHoldReleased* feedholdreleased) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (feedholdreleased) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      feedholdreleased = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, feedholdreleased, submessage_arena);
    }
    set_has_feedholdreleased();
    msg_.feedholdreleased_ = feedholdreleased;
  }
  // @@protoc_insertion_point(field_set_allocated:mc500ipc.Message.feedHoldReleased)
}
void Message::set_allocated_cyclestart(::mc500ipc::CycleStart* cyclestart) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (cyclestart) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cyclestart = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cyclestart, submessage_arena);
    }
    set_has_cyclestart();
    msg_.cyclestart_ = cyclestart;
  }
  // @@protoc_insertion_point(field_set_allocated:mc500ipc.Message.cycleStart)
}
void Message::set_allocated_cyclestop(::mc500ipc::CycleStop* cyclestop) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (cyclestop) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cyclestop = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cyclestop, submessage_arena);
    }
    set_has_cyclestop();
    msg_.cyclestop_ = cyclestop;
  }
  // @@protoc_insertion_point(field_set_allocated:mc500ipc.Message.cycleStop)
}
void Message::set_allocated_cycleexecuting(::mc500ipc::CycleExecuting* cycleexecuting) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (cycleexecuting) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cycleexecuting = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cycleexecuting, submessage_arena);
    }
    set_has_cycleexecuting();
    msg_.cycleexecuting_ = cycleexecuting;
  }
  // @@protoc_insertion_point(field_set_allocated:mc500ipc.Message.cycleExecuting)
}
void Message::set_allocated_cyclestopped(::mc500ipc::CycleStopped* cyclestopped) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (cyclestopped) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cyclestopped = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cyclestopped, submessage_arena);
    }
    set_has_cyclestopped();
    msg_.cyclestopped_ = cyclestopped;
  }
  // @@protoc_insertion_point(field_set_allocated:mc500ipc.Message.cycleStopped)
}
void Message::set_allocated_clearprogram(::mc500ipc::ClearProgram* clearprogram) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (clearprogram) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      clearprogram = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, clearprogram, submessage_arena);
    }
    set_has_clearprogram();
    msg_.clearprogram_ = clearprogram;
  }
  // @@protoc_insertion_point(field_set_allocated:mc500ipc.Message.clearProgram)
}
void Message::set_allocated_addprogramline(::mc500ipc::AddProgramLine* addprogramline) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (addprogramline) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      addprogramline = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, addprogramline, submessage_arena);
    }
    set_has_addprogramline();
    msg_.addprogramline_ = addprogramline;
  }
  // @@protoc_insertion_point(field_set_allocated:mc500ipc.Message.addProgramLine)
}
void Message::set_allocated_setworkcoordinates(::mc500ipc::SetWorkCoordinates* setworkcoordinates) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (setworkcoordinates) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      setworkcoordinates = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, setworkcoordinates, submessage_arena);
    }
    set_has_setworkcoordinates();
    msg_.setworkcoordinates_ = setworkcoordinates;
  }
  // @@protoc_insertion_point(field_set_allocated:mc500ipc.Message.setWorkCoordinates)
}
void Message::set_allocated_positionupdate(::mc500ipc::PositionUpdate* positionupdate) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (positionupdate) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      positionupdate = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, positionupdate, submessage_arena);
    }
    set_has_positionupdate();
    msg_.positionupdate_ = positionupdate;
  }
  // @@protoc_insertion_point(field_set_allocated:mc500ipc.Message.positionUpdate)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message::kSpindleCommandFieldNumber;
const int Message::kMoveToCommandFieldNumber;
const int Message::kCommandresponseFieldNumber;
const int Message::kToolcommandFieldNumber;
const int Message::kFeedHoldPressedFieldNumber;
const int Message::kFeedHoldReleasedFieldNumber;
const int Message::kCycleStartFieldNumber;
const int Message::kCycleStopFieldNumber;
const int Message::kCycleExecutingFieldNumber;
const int Message::kCycleStoppedFieldNumber;
const int Message::kClearProgramFieldNumber;
const int Message::kAddProgramLineFieldNumber;
const int Message::kSetWorkCoordinatesFieldNumber;
const int Message::kPositionUpdateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message::Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mc500ipc_2eproto::scc_info_Message.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mc500ipc.Message)
}
Message::Message(const Message& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_msg();
  switch (from.msg_case()) {
    case kSpindleCommand: {
      mutable_spindlecommand()->::mc500ipc::CmdSpindle::MergeFrom(from.spindlecommand());
      break;
    }
    case kMoveToCommand: {
      mutable_movetocommand()->::mc500ipc::CmdMoveTo::MergeFrom(from.movetocommand());
      break;
    }
    case kCommandresponse: {
      mutable_commandresponse()->::mc500ipc::CommandResponse::MergeFrom(from.commandresponse());
      break;
    }
    case kToolcommand: {
      mutable_toolcommand()->::mc500ipc::CmdChangeTool::MergeFrom(from.toolcommand());
      break;
    }
    case kFeedHoldPressed: {
      mutable_feedholdpressed()->::mc500ipc::FeedHoldPressed::MergeFrom(from.feedholdpressed());
      break;
    }
    case kFeedHoldReleased: {
      mutable_feedholdreleased()->::mc500ipc::FeedHoldReleased::MergeFrom(from.feedholdreleased());
      break;
    }
    case kCycleStart: {
      mutable_cyclestart()->::mc500ipc::CycleStart::MergeFrom(from.cyclestart());
      break;
    }
    case kCycleStop: {
      mutable_cyclestop()->::mc500ipc::CycleStop::MergeFrom(from.cyclestop());
      break;
    }
    case kCycleExecuting: {
      mutable_cycleexecuting()->::mc500ipc::CycleExecuting::MergeFrom(from.cycleexecuting());
      break;
    }
    case kCycleStopped: {
      mutable_cyclestopped()->::mc500ipc::CycleStopped::MergeFrom(from.cyclestopped());
      break;
    }
    case kClearProgram: {
      mutable_clearprogram()->::mc500ipc::ClearProgram::MergeFrom(from.clearprogram());
      break;
    }
    case kAddProgramLine: {
      mutable_addprogramline()->::mc500ipc::AddProgramLine::MergeFrom(from.addprogramline());
      break;
    }
    case kSetWorkCoordinates: {
      mutable_setworkcoordinates()->::mc500ipc::SetWorkCoordinates::MergeFrom(from.setworkcoordinates());
      break;
    }
    case kPositionUpdate: {
      mutable_positionupdate()->::mc500ipc::PositionUpdate::MergeFrom(from.positionupdate());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:mc500ipc.Message)
}

void Message::SharedCtor() {
  clear_has_msg();
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:mc500ipc.Message)
  SharedDtor();
}

void Message::SharedDtor() {
  if (has_msg()) {
    clear_msg();
  }
}

void Message::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Message::descriptor() {
  ::protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message& Message::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mc500ipc_2eproto::scc_info_Message.base);
  return *internal_default_instance();
}


void Message::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:mc500ipc.Message)
  switch (msg_case()) {
    case kSpindleCommand: {
      delete msg_.spindlecommand_;
      break;
    }
    case kMoveToCommand: {
      delete msg_.movetocommand_;
      break;
    }
    case kCommandresponse: {
      delete msg_.commandresponse_;
      break;
    }
    case kToolcommand: {
      delete msg_.toolcommand_;
      break;
    }
    case kFeedHoldPressed: {
      delete msg_.feedholdpressed_;
      break;
    }
    case kFeedHoldReleased: {
      delete msg_.feedholdreleased_;
      break;
    }
    case kCycleStart: {
      delete msg_.cyclestart_;
      break;
    }
    case kCycleStop: {
      delete msg_.cyclestop_;
      break;
    }
    case kCycleExecuting: {
      delete msg_.cycleexecuting_;
      break;
    }
    case kCycleStopped: {
      delete msg_.cyclestopped_;
      break;
    }
    case kClearProgram: {
      delete msg_.clearprogram_;
      break;
    }
    case kAddProgramLine: {
      delete msg_.addprogramline_;
      break;
    }
    case kSetWorkCoordinates: {
      delete msg_.setworkcoordinates_;
      break;
    }
    case kPositionUpdate: {
      delete msg_.positionupdate_;
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MSG_NOT_SET;
}


void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:mc500ipc.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_msg();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mc500ipc.Message)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .mc500ipc.CmdSpindle spindleCommand = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_spindlecommand()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mc500ipc.CmdMoveTo moveToCommand = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_movetocommand()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mc500ipc.CommandResponse commandresponse = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_commandresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mc500ipc.CmdChangeTool toolcommand = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_toolcommand()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mc500ipc.FeedHoldPressed feedHoldPressed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_feedholdpressed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mc500ipc.FeedHoldReleased feedHoldReleased = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_feedholdreleased()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mc500ipc.CycleStart cycleStart = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cyclestart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mc500ipc.CycleStop cycleStop = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cyclestop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mc500ipc.CycleExecuting cycleExecuting = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cycleexecuting()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mc500ipc.CycleStopped cycleStopped = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cyclestopped()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mc500ipc.ClearProgram clearProgram = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_clearprogram()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mc500ipc.AddProgramLine addProgramLine = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_addprogramline()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mc500ipc.SetWorkCoordinates setWorkCoordinates = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_setworkcoordinates()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mc500ipc.PositionUpdate positionUpdate = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_positionupdate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mc500ipc.Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mc500ipc.Message)
  return false;
#undef DO_
}

void Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mc500ipc.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (msg_case()) {
    case kSpindleCommand:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_spindlecommand(), output);
      break;
    case kMoveToCommand:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_movetocommand(), output);
      break;
    case kCommandresponse:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, this->_internal_commandresponse(), output);
      break;
    case kToolcommand:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, this->_internal_toolcommand(), output);
      break;
    case kFeedHoldPressed:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        5, this->_internal_feedholdpressed(), output);
      break;
    case kFeedHoldReleased:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        6, this->_internal_feedholdreleased(), output);
      break;
    case kCycleStart:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        7, this->_internal_cyclestart(), output);
      break;
    case kCycleStop:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        8, this->_internal_cyclestop(), output);
      break;
    case kCycleExecuting:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        9, this->_internal_cycleexecuting(), output);
      break;
    case kCycleStopped:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        10, this->_internal_cyclestopped(), output);
      break;
    case kClearProgram:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        11, this->_internal_clearprogram(), output);
      break;
    case kAddProgramLine:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        12, this->_internal_addprogramline(), output);
      break;
    case kSetWorkCoordinates:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        13, this->_internal_setworkcoordinates(), output);
      break;
    case kPositionUpdate:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        14, this->_internal_positionupdate(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mc500ipc.Message)
}

::google::protobuf::uint8* Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mc500ipc.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (msg_case()) {
    case kSpindleCommand:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          1, this->_internal_spindlecommand(), deterministic, target);
      break;
    case kMoveToCommand:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, this->_internal_movetocommand(), deterministic, target);
      break;
    case kCommandresponse:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          3, this->_internal_commandresponse(), deterministic, target);
      break;
    case kToolcommand:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          4, this->_internal_toolcommand(), deterministic, target);
      break;
    case kFeedHoldPressed:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          5, this->_internal_feedholdpressed(), deterministic, target);
      break;
    case kFeedHoldReleased:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          6, this->_internal_feedholdreleased(), deterministic, target);
      break;
    case kCycleStart:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          7, this->_internal_cyclestart(), deterministic, target);
      break;
    case kCycleStop:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          8, this->_internal_cyclestop(), deterministic, target);
      break;
    case kCycleExecuting:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          9, this->_internal_cycleexecuting(), deterministic, target);
      break;
    case kCycleStopped:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          10, this->_internal_cyclestopped(), deterministic, target);
      break;
    case kClearProgram:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          11, this->_internal_clearprogram(), deterministic, target);
      break;
    case kAddProgramLine:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          12, this->_internal_addprogramline(), deterministic, target);
      break;
    case kSetWorkCoordinates:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          13, this->_internal_setworkcoordinates(), deterministic, target);
      break;
    case kPositionUpdate:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          14, this->_internal_positionupdate(), deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mc500ipc.Message)
  return target;
}

size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mc500ipc.Message)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  switch (msg_case()) {
    // optional .mc500ipc.CmdSpindle spindleCommand = 1;
    case kSpindleCommand: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.spindlecommand_);
      break;
    }
    // optional .mc500ipc.CmdMoveTo moveToCommand = 2;
    case kMoveToCommand: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.movetocommand_);
      break;
    }
    // optional .mc500ipc.CommandResponse commandresponse = 3;
    case kCommandresponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.commandresponse_);
      break;
    }
    // optional .mc500ipc.CmdChangeTool toolcommand = 4;
    case kToolcommand: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.toolcommand_);
      break;
    }
    // optional .mc500ipc.FeedHoldPressed feedHoldPressed = 5;
    case kFeedHoldPressed: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.feedholdpressed_);
      break;
    }
    // optional .mc500ipc.FeedHoldReleased feedHoldReleased = 6;
    case kFeedHoldReleased: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.feedholdreleased_);
      break;
    }
    // optional .mc500ipc.CycleStart cycleStart = 7;
    case kCycleStart: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.cyclestart_);
      break;
    }
    // optional .mc500ipc.CycleStop cycleStop = 8;
    case kCycleStop: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.cyclestop_);
      break;
    }
    // optional .mc500ipc.CycleExecuting cycleExecuting = 9;
    case kCycleExecuting: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.cycleexecuting_);
      break;
    }
    // optional .mc500ipc.CycleStopped cycleStopped = 10;
    case kCycleStopped: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.cyclestopped_);
      break;
    }
    // optional .mc500ipc.ClearProgram clearProgram = 11;
    case kClearProgram: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.clearprogram_);
      break;
    }
    // optional .mc500ipc.AddProgramLine addProgramLine = 12;
    case kAddProgramLine: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.addprogramline_);
      break;
    }
    // optional .mc500ipc.SetWorkCoordinates setWorkCoordinates = 13;
    case kSetWorkCoordinates: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.setworkcoordinates_);
      break;
    }
    // optional .mc500ipc.PositionUpdate positionUpdate = 14;
    case kPositionUpdate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.positionupdate_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mc500ipc.Message)
  GOOGLE_DCHECK_NE(&from, this);
  const Message* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mc500ipc.Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mc500ipc.Message)
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mc500ipc.Message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.msg_case()) {
    case kSpindleCommand: {
      mutable_spindlecommand()->::mc500ipc::CmdSpindle::MergeFrom(from.spindlecommand());
      break;
    }
    case kMoveToCommand: {
      mutable_movetocommand()->::mc500ipc::CmdMoveTo::MergeFrom(from.movetocommand());
      break;
    }
    case kCommandresponse: {
      mutable_commandresponse()->::mc500ipc::CommandResponse::MergeFrom(from.commandresponse());
      break;
    }
    case kToolcommand: {
      mutable_toolcommand()->::mc500ipc::CmdChangeTool::MergeFrom(from.toolcommand());
      break;
    }
    case kFeedHoldPressed: {
      mutable_feedholdpressed()->::mc500ipc::FeedHoldPressed::MergeFrom(from.feedholdpressed());
      break;
    }
    case kFeedHoldReleased: {
      mutable_feedholdreleased()->::mc500ipc::FeedHoldReleased::MergeFrom(from.feedholdreleased());
      break;
    }
    case kCycleStart: {
      mutable_cyclestart()->::mc500ipc::CycleStart::MergeFrom(from.cyclestart());
      break;
    }
    case kCycleStop: {
      mutable_cyclestop()->::mc500ipc::CycleStop::MergeFrom(from.cyclestop());
      break;
    }
    case kCycleExecuting: {
      mutable_cycleexecuting()->::mc500ipc::CycleExecuting::MergeFrom(from.cycleexecuting());
      break;
    }
    case kCycleStopped: {
      mutable_cyclestopped()->::mc500ipc::CycleStopped::MergeFrom(from.cyclestopped());
      break;
    }
    case kClearProgram: {
      mutable_clearprogram()->::mc500ipc::ClearProgram::MergeFrom(from.clearprogram());
      break;
    }
    case kAddProgramLine: {
      mutable_addprogramline()->::mc500ipc::AddProgramLine::MergeFrom(from.addprogramline());
      break;
    }
    case kSetWorkCoordinates: {
      mutable_setworkcoordinates()->::mc500ipc::SetWorkCoordinates::MergeFrom(from.setworkcoordinates());
      break;
    }
    case kPositionUpdate: {
      mutable_positionupdate()->::mc500ipc::PositionUpdate::MergeFrom(from.positionupdate());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
}

void Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mc500ipc.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mc500ipc.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  switch (msg_case()) {
    case kSpindleCommand: {
      if (has_spindlecommand()) {
        if (!this->spindlecommand().IsInitialized()) return false;
      }
      break;
    }
    case kMoveToCommand: {
      if (has_movetocommand()) {
        if (!this->movetocommand().IsInitialized()) return false;
      }
      break;
    }
    case kCommandresponse: {
      if (has_commandresponse()) {
        if (!this->commandresponse().IsInitialized()) return false;
      }
      break;
    }
    case kToolcommand: {
      if (has_toolcommand()) {
        if (!this->toolcommand().IsInitialized()) return false;
      }
      break;
    }
    case kFeedHoldPressed: {
      break;
    }
    case kFeedHoldReleased: {
      break;
    }
    case kCycleStart: {
      break;
    }
    case kCycleStop: {
      break;
    }
    case kCycleExecuting: {
      if (has_cycleexecuting()) {
        if (!this->cycleexecuting().IsInitialized()) return false;
      }
      break;
    }
    case kCycleStopped: {
      if (has_cyclestopped()) {
        if (!this->cyclestopped().IsInitialized()) return false;
      }
      break;
    }
    case kClearProgram: {
      break;
    }
    case kAddProgramLine: {
      if (has_addprogramline()) {
        if (!this->addprogramline().IsInitialized()) return false;
      }
      break;
    }
    case kSetWorkCoordinates: {
      if (has_setworkcoordinates()) {
        if (!this->setworkcoordinates().IsInitialized()) return false;
      }
      break;
    }
    case kPositionUpdate: {
      if (has_positionupdate()) {
        if (!this->positionupdate().IsInitialized()) return false;
      }
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  return true;
}

void Message::Swap(Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message::InternalSwap(Message* other) {
  using std::swap;
  swap(msg_, other->msg_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  protobuf_mc500ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mc500ipc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace mc500ipc
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mc500ipc::Coordinate* Arena::CreateMaybeMessage< ::mc500ipc::Coordinate >(Arena* arena) {
  return Arena::CreateInternal< ::mc500ipc::Coordinate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mc500ipc::CmdSpindle* Arena::CreateMaybeMessage< ::mc500ipc::CmdSpindle >(Arena* arena) {
  return Arena::CreateInternal< ::mc500ipc::CmdSpindle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mc500ipc::CmdMoveTo* Arena::CreateMaybeMessage< ::mc500ipc::CmdMoveTo >(Arena* arena) {
  return Arena::CreateInternal< ::mc500ipc::CmdMoveTo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mc500ipc::CmdChangeTool* Arena::CreateMaybeMessage< ::mc500ipc::CmdChangeTool >(Arena* arena) {
  return Arena::CreateInternal< ::mc500ipc::CmdChangeTool >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mc500ipc::CommandResponse* Arena::CreateMaybeMessage< ::mc500ipc::CommandResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mc500ipc::CommandResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mc500ipc::FeedHoldPressed* Arena::CreateMaybeMessage< ::mc500ipc::FeedHoldPressed >(Arena* arena) {
  return Arena::CreateInternal< ::mc500ipc::FeedHoldPressed >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mc500ipc::FeedHoldReleased* Arena::CreateMaybeMessage< ::mc500ipc::FeedHoldReleased >(Arena* arena) {
  return Arena::CreateInternal< ::mc500ipc::FeedHoldReleased >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mc500ipc::CycleStart* Arena::CreateMaybeMessage< ::mc500ipc::CycleStart >(Arena* arena) {
  return Arena::CreateInternal< ::mc500ipc::CycleStart >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mc500ipc::CycleStop* Arena::CreateMaybeMessage< ::mc500ipc::CycleStop >(Arena* arena) {
  return Arena::CreateInternal< ::mc500ipc::CycleStop >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mc500ipc::CycleExecuting* Arena::CreateMaybeMessage< ::mc500ipc::CycleExecuting >(Arena* arena) {
  return Arena::CreateInternal< ::mc500ipc::CycleExecuting >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mc500ipc::CycleStopped* Arena::CreateMaybeMessage< ::mc500ipc::CycleStopped >(Arena* arena) {
  return Arena::CreateInternal< ::mc500ipc::CycleStopped >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mc500ipc::ClearProgram* Arena::CreateMaybeMessage< ::mc500ipc::ClearProgram >(Arena* arena) {
  return Arena::CreateInternal< ::mc500ipc::ClearProgram >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mc500ipc::AddProgramLine* Arena::CreateMaybeMessage< ::mc500ipc::AddProgramLine >(Arena* arena) {
  return Arena::CreateInternal< ::mc500ipc::AddProgramLine >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mc500ipc::SetWorkCoordinates* Arena::CreateMaybeMessage< ::mc500ipc::SetWorkCoordinates >(Arena* arena) {
  return Arena::CreateInternal< ::mc500ipc::SetWorkCoordinates >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mc500ipc::PositionUpdate* Arena::CreateMaybeMessage< ::mc500ipc::PositionUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::mc500ipc::PositionUpdate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mc500ipc::Message* Arena::CreateMaybeMessage< ::mc500ipc::Message >(Arena* arena) {
  return Arena::CreateInternal< ::mc500ipc::Message >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
